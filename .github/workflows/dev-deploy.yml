name: Deploy To DEV

on:
  push:
    branches: ['develop']
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create output Parameter(registry, docker tag, Branch and repo name) docker tag then set outputs
        id: vars
        run: | 
          echo "privatekey=${{ secrets.DEV_SSH_PRIVATEKEY }} | base64 -d" >> $GITHUB_OUTPUT
      - name: Set up WireGuard
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard
          sudo echo ${{ secrets.DEV_WIREGUARD_CONF_BASE64 }} | base64 -d > /etc/wireguard/wg.conf
          sudo wg-quick up wg0
      # - name: Set up WireGuard
      #   uses: egor-tensin/setup-wireguard@v1
      #   with:
      #     endpoint: '${{ secrets.DEV_WIREGUARD_ENDPOINT }}'
      #     endpoint_public_key: '${{ secrets.DEV_WIREGUARD_ENDPOINT_PUBLIC_KEY }}'
      #     ips: '${{ secrets.DEV_WIREGUARD_IPS }}'
      #     allowed_ips: '${{ secrets.DEV_WIREGUARD_ALLOW_IPS }}'
      #     private_key: '${{ secrets.DEV_WIREGUARD_PRIVATEKEY }}'
      #     preshared_key: '${{ secrets.DEV_WIREGUARD_PRESHAREDKEY }}'
      #     keepalive: '${{ secrets.DEV_WIREGUARD_KEEPALIVE }}'
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEV_VM_HOST }}
          username: ${{ secrets.DEV_SSH_USER }}
          key: ${{ steps.vars.outputs.privatekey }}
          port: ${{ secrets.DEV_SSH_PORT }}
          passphrase: ${{ secrets.DEV_SSH_PASSPHRASE }}
          script: |
            ls -al
            echo '666'